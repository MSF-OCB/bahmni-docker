---

- name: "Backup atomfeed.properties to preserve atomfeed user credentials"
  copy:
    src: "/opt/bahmni-lab/bahmni-lab/WEB-INF/classes/atomfeed.properties"
    dest: "/tmp/atomfeed.properties.bak"
    mode: preserve
    remote_src: yes

- name: "Backup bahmni-reports.properties to preserve reports-user credentials"
  copy:
    src: "/etc/bahmni-reports/bahmni-reports.properties"
    dest: "/tmp/bahmni-reports.properties.bak"
    mode: preserve
    remote_src: yes

- name: "Backup bahmnicore.properties to preserve admin user credentials"
  copy:
    src: "/opt/openmrs/bahmnicore.properties"
    dest: "/tmp/bahmnicore.properties.bak"
    mode: preserve
    remote_src: yes

- name: Clone the Bahmni config
  git:
    repo: "{{ bahmni_implementation_repo }}"
    dest: "/etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config"
    clone: yes
    update: yes
    version: "{{ bahmni_implementation_branch }}"
    depth: 1
    force: yes
     
- name: Register the config commit hash
  command: "git --git-dir=/etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config/.git rev-parse HEAD"
  register: config_commit_hash
  
- name: Write the config commit hash to a file
  copy:
    content: "{{ config_commit_hash.stdout}}"
    dest: "/config_commit_hash"

- name: Delete Git info from Bahmni config
  file:
    path: "/etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config/.git"
    state: absent
    
- name: Check if a template role exists
  stat:
    path: "/etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config/ansible/roles/template"
  register: template_stat

- name: Include the template role
  include_role:
    name: "/etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config/ansible/roles/template"
  when: template_stat.stat.exists

- name: Check if a configuration directory for openmrs-module-initializer is present
  stat:
    path: "/etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config/openmrs-module-initializer/configuration"
  register: openmrs_module_initializer_config

- name: Move the openmrs-module-initializer configuration directory
  command: "mv /etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config/openmrs-module-initializer/configuration /opt/openmrs/"
  when: openmrs_module_initializer_config.stat.exists and openmrs_module_initializer_config.stat.isdir

- name: Check if bahmni_config/report.html exists
  stat:
    path: "/etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config/report.html"
  register: report_html_stat

- name: Set owner of bahmni_config/report.html to bahmni
  file:
    path: "/etc/bahmni-installer/deployment-artifacts/{{ bahmni_implementation_name }}_config/report.html"
    owner: bahmni
    group: bahmni
  when: report_html_stat.stat.exists

