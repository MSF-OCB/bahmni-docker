---

- name: Wait for MySQL to become available on the master
  wait_for:
    host: "{{ active_host }}"
    port: "{{ mysql_replication_port }}"
    delay: 15
    sleep: 3
    state: started
  when: server_mode == "passive"

- name: Copy MySQL config
  template:
    src: templates/my.cnf.j2
    dest: /etc/my.cnf
    backup: yes
    mode: 0644

- name: Restart MySQL
  service:
    name: mysqld
    state: restarted

- name: stop replication
  mysql_replication:
    mode: stopslave
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
  ignore_errors: true

- name: reset all replication configs
  mysql_replication:
    mode: resetslaveall
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
  ignore_errors: true

- block:

  - name: Delete previous replication users
    mysql_user:
      name: "{{ bahmni_replication_username }}"
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
      state: absent

  - name: Create and grant privileges to replication user of slave in master DB
    mysql_user:
      name: "{{ bahmni_replication_username }}"
      password: "{{ bahmni_replication_password }}"
      host: "{{ passive_host }}"
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
      priv: "*.*:ALL,GRANT"
      state: present
      
  - name: Restart MySQL
    service:
      name: mysqld
      state: restarted

  when: server_mode == "active"

- block:

  - name: change master parameters on slave to start the replication
    mysql_replication:
      mode: changemaster
      master_host: "{{ active_host }}"
      login_user: "root"
      login_password: "{{ mysql_root_password }}"

  - name: Make dump from active
    command: "mysqldump -h{{ active_host }} -u{{ bahmni_replication_username }} -p{{ bahmni_replication_password }} --default-character-set=utf8 --add-drop-database --all-databases --routines --single-transaction --add-locks --disable-keys --extended-insert --flush-logs --hex-blob --master-data=1 -r /tmp/mysql_dump_master.sql"

  - name: Import dump from active
    mysql_db:
      state: import
      name: all
      target: "/tmp/mysql_dump_master.sql"
      login_user: "root"
      login_password: "{{ mysql_root_password }}"

  - name: Delete dump
    file:
      path: "/tmp/mysql_dump_master.sql"
      state: absent

  - name: start replication 
    command: 'mysql -uroot -p{{ mysql_root_password }} -e"start slave user = ''{{ bahmni_replication_username }}'' password = ''{{ bahmni_replication_password }}''";'

  when: server_mode == "passive"

